package ru.voenmeh.amitin.stateMacnines;

/* Класс-шаблон для КА. Все автоматы являются наследниками класса */
public abstract class StateMachine {
    protected Character c; //текущий распознаваемый символ
    protected Integer state; //текущее состояние
    protected Integer result; //результат обработки
    protected Boolean isFinalState; //признак нахождения КА в финальном состоянии

    StateMachine(){
        reset(); //инициализация автомата при создании
    }

    //Основной метод всех автоматов. Переключает состояние автомата в зависимости от символа
    protected abstract void switchState(char c);

    /*
    Результаты:
    -1 - автомат не перешёл в следующее состояние, текущее состояние - не финальное
    0 - автомат успешно перешёл в следующее состояние
    1 - автомат не перешёл в следующее состояние, текущее состояние - финальное 
    */ 
    public Integer getResult(char sym){
        switchState(sym); //переключить состояние автомата
        if (state == -1) { //если автомат не перешёл в следующее состояние
            if(isFinalState) //то оценить последнее состояние
                return 1; // если оно финальное, то передать информацию менеджеру КА об успешно распознанной лексеме
            else return -1; //если не финальное, то лексема не известна автомату
        } else return 0; // если автомат успешно перешёл в следующее состояние, то вернуть признак готовности приёма следующего символа
    }

    /*сброс автомата для приёма следующей лексемы*/
    public void reset(){
        state = 0; //установить состояние на начальное
        result = -1; //установить результат работы на неопредеённый
        isFinalState = false; //сбросить признак финального состояния
    }
}
